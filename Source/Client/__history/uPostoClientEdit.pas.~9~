unit uPostoClientEdit;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, System.Actions, Vcl.ActnList,
  Vcl.StdCtrls, Vcl.ExtCtrls, uPostoClientBaseDAO, Vcl.Mask, Vcl.DBCtrls;

type
  TPostoClientEdit = class(TForm)
    ActionList1: TActionList;
    acSalvar: TAction;
    acCancelar: TAction;
    Panel1: TPanel;
    Button5: TButton;
    Button6: TButton;
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    Label4: TLabel;
    Label5: TLabel;
    Label6: TLabel;
    Edit1: TDBEdit;
    Edit3: TDBEdit;
    Edit4: TDBEdit;
    Edit5: TDBEdit;
    Edit6: TDBEdit;
    DBEdit1: TDBEdit;
    procedure acSalvarExecute(Sender: TObject);
    procedure acCancelarExecute(Sender: TObject);
    procedure acSalvarUpdate(Sender: TObject);
  private
    FDAO: TPostoClientBaseDAO;
    { Private declarations }
  public
    { Public declarations }
    function CanPost: Boolean;
    property DAO: TPostoClientBaseDAO read FDAO write FDAO;
  end;

var
  PostoClientEdit: TPostoClientEdit;

implementation

{$R *.dfm}

procedure TPostoClientEdit.acCancelarExecute(Sender: TObject);
begin
  FDAO.DoCancelar(FDAO.memBase);
end;

procedure TPostoClientEdit.acSalvarExecute(Sender: TObject);
begin
  FDAO.DoSalvar(FDAO.memBase);
end;

procedure TPostoClientEdit.acSalvarUpdate(Sender: TObject);
begin
  TAction(Sender).Enabled := CanPost;
end;

function TPostoClientEdit.CanPost: Boolean;
var
  I: Integer;
  LDataSet: TFDAdaptedDataSet;
begin
  Result := (FDAO.FDSchemaAdapter <> nil);
  if Result then
  begin
    Result := False;
    for I := 0 to FDAO.FDSchemaAdapter.Count - 1 do
    begin
      LDataSet := FDAO.FDSchemaAdapter.DataSets[I];
      if (LDataSet.ChangeCount > 0) or (LDataSet.State in dsEditModes) then
      begin
        Result := True;
        break;
      end;
    end;
  end;
end;

end.



